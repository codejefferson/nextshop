apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

// Keystore
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    // Keys for buildConfigFields
    def API_ENDPOINT = "API_ENDPOINT"
    def API_ENDPOINT_PATH = '"https://bdk0sta2n0.execute-api.eu-west-1.amazonaws.com/ios-assignment/"'

    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.nextshop"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode 100000
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true

            proguardFiles(
                    'proguard/proguard-android-support.pro',
                    'proguard/proguard-retrofit.pro',
                    'proguard/proguard-project.pro',
                    'proguard/proguard-okio.pro',
                    'proguard/proguard-okhttp.pro',)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", API_ENDPOINT, API_ENDPOINT_PATH

            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false

            buildConfigField "String", API_ENDPOINT, API_ENDPOINT_PATH
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
        main {
            file('src/main/res')
                    .listFiles()
                    .each { res.srcDirs += it.path }
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.includeAndroidResources = true
        resultsDir = "${project.buildDir}/test/results"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test:core:$rootProject.testVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.testVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.testVersion"

    // Mockito framework
    testImplementation 'org.mockito:mockito-core:2.22.0'

    // Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

    // UI testing with Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.exspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.exspressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$rootProject.exspressoVersion"

    // Idle
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'

    // Kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:3.12.0"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.archLifecycleVersion"

    // Extensions
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    // Glide
    implementation("com.github.bumptech.glide:glide:4.9.0") {
        exclude group: "com.android.support"
    }

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    // Circle indicator
    implementation 'me.relex:circleindicator:1.2.2@aar'

}
